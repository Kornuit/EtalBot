Include("libs/Common_Vars.ntl");

var Cubing = {

	CheckItem: function (item, result) {
		var i, n, _index, _classid, _gid, _calclevel,
			_result = false,
			_isEthereal = ((item.itemflag & 0x400000) == 0x400000);

		if(!NTConfig_Cubing)
			return false;

		_classid = item.classid;
		_gid = item.gid;
		_calclevel = parseInt(me.GetStat(12)/2) + parseInt(item.itemlevel/2);

		for(i = 0 ; i < NTConfig_CubingItem.length ; i++)
		{
			if(NTConfig_CubingItem[i][0] == NTCU_GEM)
			{
				if(_classid == NTConfig_CubingItem[i][1])
				{
					for(n = 0 ; n < 3 ; n++)
					{
						if(NTConfig_CubingItem[i][2+n] == null)
						{
							NTConfig_CubingItem[i][2+n] = _gid;
							break;
						}
						else if(NTConfig_CubingItem[i][2+n] == _gid)
							break;
					}

					_result = true;
				}
			}
			else if(NTConfig_CubingItem[i][0] == NTCU_MAGIC || NTConfig_CubingItem[i][0] == NTCU_MAGIC_CHARM)
			{
				if(_classid == NTConfig_CubingItem[i][1])
				{
					if(result == 0 && item.quality == 4)
					{
						if(NTConfig_CubingItem[i][0] == NTCU_MAGIC_CHARM)
						{
							if(item.itemlevel >= 95)
							{
								if(NTConfig_CubingItem[i][2] == null)
								{
									NTConfig_CubingItem[i][2] = _gid;
									_result = true;
								}
								else if(NTConfig_CubingItem[i][2] == _gid)
									_result = true;
							}
						}
						//Begin Jav code
						else if( NTConfig_CubingItem[i][1] == 285 ) // maiden javelin
						{
							if(item.itemlevel >= 71 && item.itemlevel <= 75)
							{
								if(NTConfig_CubingItem[i][2] == null)
								{
									NTConfig_CubingItem[i][2] = _gid;
									_result = true;
								}
								else if(NTConfig_CubingItem[i][2] == _gid)
									_result = true;
							}
						}
						else if( NTConfig_CubingItem[i][1] == 295 ) // ceremonial javelin
						{
							if(item.itemlevel >= 77 && item.itemlevel <= 81)
							{
								if(NTConfig_CubingItem[i][2] == null)
								{
									NTConfig_CubingItem[i][2] = _gid;
									_result = true;
								}
								else if(NTConfig_CubingItem[i][2] == _gid)
									_result = true;
							}
						}
						else if( NTConfig_CubingItem[i][1] == 305 ) // maiden javelin
						{
							if(item.itemlevel >= 80 && item.itemlevel <= 84)
							{
								if(NTConfig_CubingItem[i][2] == null)
								{
									NTConfig_CubingItem[i][2] = _gid;
									_result = true;
								}
								else if(NTConfig_CubingItem[i][2] == _gid)
									_result = true;
							}
						}
						// End Jav Code
						else
						{
							if(item.itemlevel >= 85)
							{
								if(NTConfig_CubingItem[i][2] == null)
								{
									NTConfig_CubingItem[i][2] = _gid;
									_result = true;
								}
								else if(NTConfig_CubingItem[i][2] == _gid)
									_result = true;
							}
						}
					}
				}
				else if(_classid == 566 || _classid == 586 || _classid == 601)
				{
					if(NTConfig_CubingItem[i][2] != null)
					{
						for(n = 0 ; n < 3 ; n++)
						{
							if(NTConfig_CubingItem[i][3+n] == null)
							{
								NTConfig_CubingItem[i][3+n] = _gid;
								break;
							}
							else if(NTConfig_CubingItem[i][3+n] == _gid)
								break;
						}

						_result = true;
					}
				}
				else if(_classid == 565)
				{
					if(NTConfig_CubingItem[i][2] != null)
					{
						for(n = 0 ; n < 3 ; n++)
						{
							if(NTConfig_CubingItem[i][6+n] == null)
							{
								NTConfig_CubingItem[i][6+n] = _gid;
								break;
							}
							else if(NTConfig_CubingItem[i][6+n] == _gid)
								break;
						}

						_result = true;
					}
				}
				else if(_classid == 585)
				{
					if(NTConfig_CubingItem[i][2] != null)
					{
						for(n = 0 ; n < 3 ; n++)
						{
							if(NTConfig_CubingItem[i][9+n] == null)
							{
								NTConfig_CubingItem[i][9+n] = _gid;
								break;
							}
							else if(NTConfig_CubingItem[i][9+n] == _gid)
								break;
						}

						_result = true;
					}
				}
				else if(_classid == 600)
				{
					if(NTConfig_CubingItem[i][2] != null)
					{
						for(n = 0 ; n < 3 ; n++)
						{
							if(NTConfig_CubingItem[i][12+n] == null)
							{
								NTConfig_CubingItem[i][12+n] = _gid;
								break;
							}
							else if(NTConfig_CubingItem[i][12+n] == _gid)
								break;
						}

						_result = true;
					}
				}
			}
			else if(NTConfig_CubingItem[i][0] >= NTCU_CRAFT_HITPOWER_HELM && NTConfig_CubingItem[i][0] <= NTCU_CRAFT_SAFETY_WEAPON)
			{
				_index = NTConfig_CubingItem[i][0] - NTCU_CRAFT_HITPOWER_HELM;

				if(_classid == NTConfig_CubingItem[i][1])
				{
					if(result == 0 && item.quality == 4 && _calclevel >= _NTCU_CraftRecipe[_index][0])
					{
						if(NTConfig_CubingItem[i][2] == null)
						{
							NTConfig_CubingItem[i][2] = _gid;
							_result = true;
						}
						else if(NTConfig_CubingItem[i][2] == _gid)
							_result = true;
					}
				}
				else if(_classid == 643)
				{
					if(result == 0 && NTConfig_CubingItem[i][2] != null)
					{
						if(NTConfig_CubingItem[i][3] == null)
						{
							NTConfig_CubingItem[i][3] = _gid;
							_result = true;
						}
						else if(NTConfig_CubingItem[i][3] == _gid)
							_result = true;
					}
				}
				else if(_classid == _NTCU_CraftRecipe[_index][1])
				{
					if(NTConfig_CubingItem[i][2] != null)
					{
						if(NTConfig_CubingItem[i][4] == null)
						{
							NTConfig_CubingItem[i][4] = _gid;
							_result = true;
						}
						else if(NTConfig_CubingItem[i][4] == _gid)
							_result = true;
					}
				}
				else if(_classid == _NTCU_CraftRecipe[_index][2])
				{
					if(NTConfig_CubingItem[i][2] != null)
					{
						if(NTConfig_CubingItem[i][5] == null)
						{
							NTConfig_CubingItem[i][5] = _gid;
							_result = true;
						}
						else if(NTConfig_CubingItem[i][5] == _gid)
							_result = true;
					}
				}
				else if(_classid == _NTCU_CraftRecipe[_index][2]-1)
				{
					if(NTConfig_CubingItem[i][2] != null && NTConfig_CubingItem[i][5] == null)
					{
						for(n = 0 ; n < 3 ; n++)
						{
							if(NTConfig_CubingItem[i][6+n] == null)
							{
								NTConfig_CubingItem[i][6+n] = _gid;
								_result = true;

								break;
							}
							else if(NTConfig_CubingItem[i][6+n] == _gid)
							{
								_result = true;

								break;
							}
						}
					}
				}
			}
			else if(NTConfig_CubingItem[i][0] >= NTCU_SOCKET_BODYARMOR && NTConfig_CubingItem[i][0] <= NTCU_SOCKET_SHIELD)
			{
				_index = NTConfig_CubingItem[i][0] - NTCU_SOCKET_BODYARMOR;

				if(_classid == NTConfig_CubingItem[i][1])
				{
					if(result == 1 && item.quality <= 2 && item.GetStat(194) == 0)
					{
						if(NTConfig_CubingItem[i][2] == null)
						{
							NTConfig_CubingItem[i][2] = _gid;
							_result = true;
						}
						else if(NTConfig_CubingItem[i][2] == _gid)
							_result = true;
					}
				}
				else if(_classid == _NTCU_SocketRecipe[_index][0])
				{
					if(NTConfig_CubingItem[i][2] != null)
					{
						if(NTConfig_CubingItem[i][3] == null)
						{
							NTConfig_CubingItem[i][3] = _gid;
							_result = true;
						}
						else if(NTConfig_CubingItem[i][3] == _gid)
							_result = true;
					}
				}
				else if(_classid == _NTCU_SocketRecipe[_index][1])
				{
					if(NTConfig_CubingItem[i][2] != null)
					{
						if(NTConfig_CubingItem[i][4] == null)
						{
							NTConfig_CubingItem[i][4] = _gid;
							_result = true;
						}
						else if(NTConfig_CubingItem[i][4] == _gid)
							_result = true;
					}
				}
				else if(_classid == _NTCU_SocketRecipe[_index][2])
				{
					if(NTConfig_CubingItem[i][2] != null)
					{
						if(NTConfig_CubingItem[i][5] == null)
						{
							NTConfig_CubingItem[i][5] = _gid;
							_result = true;
						}
						else if(NTConfig_CubingItem[i][5] == _gid)
							_result = true;
					}
				}
				else if(_classid == _NTCU_SocketRecipe[_index][2]-1)
				{
					if(NTConfig_CubingItem[i][2] != null && NTConfig_CubingItem[i][5] == null)
					{
						for(n = 0 ; n < 3 ; n++)
						{
							if(NTConfig_CubingItem[i][6+n] == null)
							{
								NTConfig_CubingItem[i][6+n] = _gid;
								_result = true;

								break;
							}
							else if(NTConfig_CubingItem[i][6+n] == _gid)
							{
								_result = true;

								break;
							}
						}
					}
				}
			}
			else if(NTConfig_CubingItem[i][0] >= NTCU_UPGRADE_N_UNIQUE_WEAPON && NTConfig_CubingItem[i][0] <= NTCU_UPGRADE_E_RARE_ARMOR)
			{
				_index = NTConfig_CubingItem[i][0] - NTCU_UPGRADE_N_UNIQUE_WEAPON;

				if(_classid == NTConfig_CubingItem[i][1])
				{
					if(result == 1 && item.quality == _NTCU_UpgradeRecipe[_index][0])
					{
						if(NTConfig_CubingItem[i][2] == null)
						{
							NTConfig_CubingItem[i][2] = _gid;
							_result = true;
						}
						else if(NTConfig_CubingItem[i][2] == _gid)
							_result = true;
					}
				}
				else if(_classid == _NTCU_UpgradeRecipe[_index][1])
				{
					if(NTConfig_CubingItem[i][2] != null)
					{
						if(NTConfig_CubingItem[i][3] == null)
						{
							NTConfig_CubingItem[i][3] = _gid;
							_result = true;
						}
						else if(NTConfig_CubingItem[i][3] == _gid)
							_result = true;
					}
				}
				else if(_classid == _NTCU_UpgradeRecipe[_index][2])
				{
					if(NTConfig_CubingItem[i][2] != null)
					{
						if(NTConfig_CubingItem[i][4] == null)
						{
							NTConfig_CubingItem[i][4] = _gid;
							_result = true;
						}
						else if(NTConfig_CubingItem[i][4] == _gid)
							_result = true;
					}
				}
				else if(_classid == _NTCU_UpgradeRecipe[_index][3])
				{
					if(NTConfig_CubingItem[i][2] != null)
					{
						if(NTConfig_CubingItem[i][5] == null)
						{
							NTConfig_CubingItem[i][5] = _gid;
							_result = true;
						}
						else if(NTConfig_CubingItem[i][5] == _gid)
							_result = true;
					}
				}
				else if(_classid == _NTCU_UpgradeRecipe[_index][3]-1)
				{
					if(NTConfig_CubingItem[i][2] != null && NTConfig_CubingItem[i][5] == null)
					{
						for(n = 0 ; n < 3 ; n++)
						{
							if(NTConfig_CubingItem[i][6+n] == null)
							{
								NTConfig_CubingItem[i][6+n] = _gid;
								_result = true;

								break;
							}
							else if(NTConfig_CubingItem[i][6+n] == _gid)
							{
								_result = true;

								break;
							}
						}
					}
				}
			}
			else if(NTConfig_CubingItem[i][0] == NTCU_ESSENSE)
			{
				if(_classid >= 654 && _classid <= 657)
				{
					if(NTConfig_CubingItem[i][2+_classid-654] == null)
					{
						NTConfig_CubingItem[i][2+_classid-654] = _gid;
						_result = true;
					}
					else if(NTConfig_CubingItem[i][2+_classid-654] == _gid)
						_result = true;
				}
			}
			else if(NTConfig_CubingItem[i][0] >= NTCU_RUNE_EL && NTConfig_CubingItem[i][0] <= NTCU_RUNE_ORT)
			{
				if(_classid == NTConfig_CubingItem[i][0])
				{
					for(n = 0 ; n < 3 ; n++)
					{
						if(NTConfig_CubingItem[i][2+n] == null)
						{
							NTConfig_CubingItem[i][2+n] = _gid;
							break;
						}
						else if(NTConfig_CubingItem[i][2+n] == _gid)
							break;
					}

					_result = true;
				}
			}
			else if(NTConfig_CubingItem[i][0] >= NTCU_RUNE_THUL && NTConfig_CubingItem[i][0] <= NTCU_RUNE_LEM)
			{
				if(_classid == NTConfig_CubingItem[i][0])
				{
					for(n = 0 ; n < 3 ; n++)
					{
						if(NTConfig_CubingItem[i][2+n] == null)
						{
							NTConfig_CubingItem[i][2+n] = _gid;
							_result = true;

							break;
						}
						else if(NTConfig_CubingItem[i][2+n] == _gid)
						{
							_result = true;

							break;
						}
					}
				}
				else if(_classid == NTConfig_CubingItem[i][1])
				{
					if(NTConfig_CubingItem[i][3] != null)
					{
						if(NTConfig_CubingItem[i][5] == null)
						{
							NTConfig_CubingItem[i][5] = _gid;
							_result = true;
						}
						else if(NTConfig_CubingItem[i][5] == _gid)
							_result = true;
					}
				}
			}
			else if(NTConfig_CubingItem[i][0] >= NTCU_RUNE_PUL && NTConfig_CubingItem[i][0] <= NTCU_RUNE_CHAM)
			{
				if(_classid == NTConfig_CubingItem[i][0])
				{
					for(n = 0 ; n < 2 ; n++)
					{
						if(NTConfig_CubingItem[i][2+n] == null)
						{
							NTConfig_CubingItem[i][2+n] = _gid;
							break;
						}
						else if(NTConfig_CubingItem[i][2+n] == _gid)
							break;
					}

					_result = true;
				}
				else if(_classid == NTConfig_CubingItem[i][1])
				{
					if(NTConfig_CubingItem[i][3] != null)
					{
						if(NTConfig_CubingItem[i][4] == null)
						{
							NTConfig_CubingItem[i][4] = _gid;
							_result = true;
						}
						else if(NTConfig_CubingItem[i][4] == _gid)
							_result = true;
					}
				}
			}
		}

		return _result;
	},

	InitCubing: function () {
		var i, n;
		var _count;
		var _items;

		if(!NTConfig_Cubing)
			return false;

		for(i = 0 ; i < NTConfig_CubingItem.length ; i++)
		{
			if(NTConfig_CubingItem[i][0] < NTCU_MAGIC)
				_count = 5;
			else if(NTConfig_CubingItem[i][0] < NTCU_CRAFT_HITPOWER_HELM)
				_count = 15;
			else if(NTConfig_CubingItem[i][0] < NTCU_ESSENSE)
				_count = 9;
			else if(NTConfig_CubingItem[i][0] == NTCU_ESSENSE)
				_count = 6;
			else if(NTConfig_CubingItem[i][0] < NTCU_RUNE_THUL)
				_count = 5;
			else if(NTConfig_CubingItem[i][0] < NTCU_RUNE_PUL)
				_count = 6;
			else
				_count = 5;

			for(n = 2 ; n < _count ; n++)
				NTConfig_CubingItem[i][n] = null;
		}

		_items = me.GetItems();

		if(!_items)
			return false;

		for(i = 0 ; i < _items.length ; i++)
		{
			if(_items[i].mode == 0)
			{
				if(_items[i].itemloc != 0 || NTConfig_Columns[_items[i].y][_items[i].x])
					SnagIt.CheckItem(_items[i])[0];
			}
		}

		for(i = 0 ; i < _items.length ; i++)
		{
			if(_items[i].mode == 0)
			{
				if(_items[i].itemloc != 0 || NTConfig_Columns[_items[i].y][_items[i].x])
					SnagIt.CheckItem(_items[i])[0];
			}
		}

		return true;
	},

	CheckCubing: function () {
		var i, n;

		if(!NTConfig_Cubing)
			return false;

		for(i = 0 ; i < NTConfig_CubingItem.length ; i++)
		{
			if(NTConfig_CubingItem[i][0] == NTCU_MAGIC || NTConfig_CubingItem[i][0] == NTCU_MAGIC_CHARM)
			{
				for(n = 2 ; n < 6 ; n++)
				{
					if(NTConfig_CubingItem[i][n] == null)
						break;
				}

				if(n >= 6)
					break;

				for(n = 6 ; n < 9 ; n++)
				{
					if(NTConfig_CubingItem[i][n] == null)
						break;
				}

				if(n >= 9)
					break;

				for(n = 9 ; n < 12 ; n++)
				{
					if(NTConfig_CubingItem[i][n] == null)
						break;
				}

				if(n >= 12)
					break;

				for(n = 12 ; n < 15 ; n++)
				{
					if(NTConfig_CubingItem[i][n] == null)
						break;
				}

				if(n >= 15)
					break;
			}
			else if(NTConfig_CubingItem[i][0] >= NTCU_CRAFT_HITPOWER_HELM && NTConfig_CubingItem[i][0] <= NTCU_UPGRADE_E_RARE_ARMOR)
			{
				for(n = 2 ; n < 6 ; n++)
				{
					if(NTConfig_CubingItem[i][n] == null)
						break;
				}

				if(n >= 6)
					break;

				for(n = 6 ; n < 9 ; n++)
				{
					if(NTConfig_CubingItem[i][n] == null)
						break;
				}

				if(n >= 9)
					break;
			}
			else
			{
				for(n = 2 ; n < NTConfig_CubingItem[i].length ; n++)
				{
					if(NTConfig_CubingItem[i][n] == null)
						break;
				}

				if(n >= NTConfig_CubingItem[i].length)
					break;
			}
		}

		return (i < NTConfig_CubingItem.length);
	},

	DoCubing: function () {
		var i, n;
		var _items, result;
		var resultArray = new Array();
		
		if(!NTConfig_Cubing){
			return false;
		}

		_items = me.GetItems(NTC_UNIT_CUBE);

		if(!_items || _items.length < 1)
			return false;

		if(this.CheckCubeInventoryInt() > 0)
		{
			if(!this.OpenCubeInt(_items[0]))
				return false;

			if(this.ClearCubeInt() < 1)
				return false;

			this.CloseCubeInt();
		}

		do
		{
			for(i = 0 ; i < NTConfig_CubingItem.length ; i++)
			{
				if(NTConfig_CubingItem[i][0] == NTCU_MAGIC || NTConfig_CubingItem[i][0] == NTCU_MAGIC_CHARM)
				{
					for(n = 2 ; n < 6 ; n++)
					{
						if(NTConfig_CubingItem[i][n] == null)
							break;
					}

					if(n >= 6)
					{
						if(!this.MoveItemsToCubeInt(_items[0], i, 2, 5))
							return false;

						break;
					}

					for(n = 6 ; n < 9 ; n++)
					{
						if(NTConfig_CubingItem[i][n] == null)
							break;
					}

					if(n >= 9)
					{
						if(!this.MoveItemsToCubeInt(_items[0], i, 6, 8))
							return false;

						break;
					}

					for(n = 9 ; n < 12 ; n++)
					{
						if(NTConfig_CubingItem[i][n] == null)
							break;
					}

					if(n >= 12)
					{
						if(!this.MoveItemsToCubeInt(_items[0], i, 9, 11))
							return false;

						break;
					}

					for(n = 12 ; n < 15 ; n++)
					{
						if(NTConfig_CubingItem[i][n] == null)
							break;
					}

					if(n >= 15)
					{
						if(!this.MoveItemsToCubeInt(_items[0], i, 12, 14))
							return false;

						break;
					}
				}
				else if(NTConfig_CubingItem[i][0] >= NTCU_CRAFT_HITPOWER_HELM && NTConfig_CubingItem[i][0] <= NTCU_UPGRADE_E_RARE_ARMOR)
				{
					for(n = 2 ; n < 6 ; n++)
					{
						if(NTConfig_CubingItem[i][n] == null)
							break;
					}

					if(n >= 6)
					{
						if(!this.MoveItemsToCubeInt(_items[0], i, 2, 5))
							return false;

						break;
					}

					for(n = 6 ; n < 9 ; n++)
					{
						if(NTConfig_CubingItem[i][n] == null)
							break;
					}

					if(n >= 9)
					{
						if(!this.MoveItemsToCubeInt(_items[0], i, 6, 8))
							return false;

						break;
					}
				}
				else
				{
					for(n = 2 ; n < NTConfig_CubingItem[i].length ; n++)
					{
						if(NTConfig_CubingItem[i][n] == null)
							break;
					}

					if(n >= NTConfig_CubingItem[i].length)
					{
						if(!this.MoveItemsToCubeInt(_items[0], i, 2, NTConfig_CubingItem[i].length-1))
							return false;

						break;
					}
				}
			}

			if(i < NTConfig_CubingItem.length)
			{
				if(!this.OpenCubeInt(_items[0]))
					return false;

				if(!Transmute())
					return false;

				NTC_PingDelay(800);
				if(NTConfig_CubeProcessToManager > 0){
					if(NTConfig_CubeProcessToManager == 1){
						Common.SendLogToOOG(NTC_LOG_ITEM, _NTCU_LogString);
					}
					else if (NTConfig_CubeProcessToManager == 2) {
						Common.SendLogToOOG(NTC_LOG_COMMON, _NTCU_LogString);
					}
				}
				var crafted_itm = this.GetCubeContents();
				if(crafted_itm.length == 1)
				{
					if(crafted_itm[0].quality == 8 || crafted_itm[0].itemflag&0x400000 || crafted_itm[0].quality == 7 && crafted_itm[0].class == 2)
					{
						var _isEthereal = ((crafted_itm[0].itemflag & 0x400000) == 0x400000);
						resultArray = SnagIt.CheckItem(crafted_itm[0]);
						result = resultArray[0];
						if(result != 0)
						{
							if(NTConfig_LogCraftedItems) {
								if(NTConfig_IndependantLog) {
									ItemLogger.WriteILog(crafted_itm[0], me, _isEthereal, 12, false, '', true);
								} else {
									ItemLogger.WriteLog(crafted_itm[0], me, _isEthereal, 12, false, '', true);
								}
							}
							Common.SendLogToOOG(NTC_LOG_ITEM, COLOR_2 + "Kept: " + NTC_ItemQualityToMGRColor[crafted_itm[0].quality] + crafted_itm[0].name.split("\n")[0]+ ";" + crafted_itm[0].itemdesc + "\n" +  COLOR_2 + "iLvl: " + crafted_itm[0].itemlevel + COLOR_2 + "\n Crafted"+ "\n" + COLOR_2 +resultArray[1]+", "+resultArray[2]);
						}
						else
						{
							if(NTConfig_LogCraftedItems) {
								if(NTConfig_IndependantLog) {
									ItemLogger.WriteILog(crafted_itm[0], me, _isEthereal, 13, false, '', true);
								} else {
									ItemLogger.WriteLog(crafted_itm[0], me, _isEthereal, 13, false, '', true);
								}
							}
							if(NTConfig_LogSoldItemQuality != 0) {
								Common.SendLogToOOG(NTC_LOG_ITEM, COLOR_1 + "Sold: " + NTC_ItemQualityToMGRColor[crafted_itm[0].quality] + crafted_itm[0].name.split("\n")[0]+ ";" + crafted_itm[0].itemdesc + "\n" +  COLOR_2 + "iLvl: " + crafted_itm[0].itemlevel + COLOR_2 + "\n Crafted");
							}
						}
					}
				}
				if(NTConfig_LogCraftingString)
					File.Log("logs/CraftLog/" + me.name + "_CraftingString.txt", _NTCU_LogString);
				var crafted_itm = NTCU_GetCubeContents();
				if (crafted_itm.length == 1)
				{
					if (crafted_itm[0].quality == 8)
					{
						var _isEthereal = ((crafted_itm[0].itemflag & 0x400000) == 0x400000);
						if (SnagIt.CheckItem(crafted_itm[0])[0] != 0 ) {
							Common.SendLogToOOG(NTC_LOG_ITEM,  COLOR_1 + "Kept Cubed Item " + NTC_ItemQualityToMGRColor[crafted_itm[0].quality] + crafted_itm[0].name.split("\n")[0] + ";" + crafted_itm[0].itemdesc + "\n" +  COLOR_2 + "iLvl: " + crafted_itm[0].itemlevel+ "\n" + COLOR_2 +resultArray[1]+", "+resultArray[2]);
						}
						else
						{
							Common.SendLogToOOG(NTC_LOG_ITEM, "Trashed Cubed Item " + NTC_ItemQualityToMGRColor[crafted_itm[0].quality] + crafted_itm[0].name.split("\n")[0] + ";" + crafted_itm[0].itemdesc + "\n" +  COLOR_2 + "iLvl: " + crafted_itm[0].itemlevel);
						}
					}
						
				}

				if(this.ClearCubeInt() == 1)
					this.CloseCubeInt();
				else
				{
					this.CloseCubeInt();

					return false;
				}
			}
		} while(NTCU_InitCubing() && NTCU_CheckCubing());

		return true;
	},

// Internal function
	CheckCubeInventoryInt: function () {
		var i, x, y, _items,
			_itemcounts = 0;

		for(y = 0 ; y < 4 ; y++)
		{
			for(x = 0 ; x < 10 ; x++)
				_NTCU_Inventory[y][x] = 0;
		}

		_items = me.GetItems();

		if(!_items)
			return 0;

		for(i = 0 ; i < _items.length ; i++)
		{
			if(_items[i].mode == 0)
			{
				if(_items[i].itemloc == 0)
				{
					for(y = 0 ; y < _items[i].ysize ; y++)
					{
						for(x = 0 ; x < _items[i].xsize ; x++)
							_NTCU_Inventory[_items[i].y+y][_items[i].x+x] = 1;
					}
				}
				else if(_items[i].itemloc == 3)
					_itemcounts++;
			}
		}

		return _itemcounts;
	},

	MoveItemsToCubeInt: function (cube, index, start, end) {
		var i, n, _items;

		_items = me.GetItems();

		if(!_items)
			return false;

		_NTCU_LogString = COLOR_8 + "Transmuted ";

		for(i = start ; i <= end ; i++)
		{
			for(n = 0 ; n < _items.length ; n++)
			{
				if(_items[n].gid == NTConfig_CubingItem[index][i])
				{
					if(!this.MoveItemToCubeInt(cube, _items[n]))
						return false;

					if(i > start)
						_NTCU_LogString += "+";

					_NTCU_LogString += _items[n].name.split("\n")[0];

					break;
				}
			}

			if(n >= _items.length)
				return false;
		}

		return true;
	},

	MoveItemToCubeInt: function (cube, item) {
		var x, y, _itemx, _itemy;

		if(item.itemloc == 3)
			return true;

		_itemx = item.x;
		_itemy = item.y;

		if(!Common.ItemToCursor(item))
			return false;

		if(item.itemloc == 0)
		{
			for(y = 0 ; y < item.ysize ; y++)
			{
				for(x = 0 ; x < item.xsize ; x++)
					_NTCU_Inventory[_itemy+y][_itemx+x] = 0;
			}
		}

		for(x = 0 ; x < 80 ; x++)
		{
			if((x % 40) == 0)
			{
				if(item.ysize < 3)
					me.ClickItem(0, cube.x, cube.y, cube.itemloc);
				else if(item.ysize == 3)
					me.ClickItem(0, cube.x, cube.y-1, cube.itemloc);
				else
				{
					if(cube.y == 0)
						me.ClickItem(0, cube.x, -1, cube.itemloc);
					else
						me.ClickItem(0, cube.x, cube.y-2, cube.itemloc);
				}
			}

			Common.Delay(100);

			if(!me.itemoncursor)
				break;
		}

		if(x >= 80)
			return false;

		Common.PingDelay(200);

		return true;
	},

	MoveItemToInventoryInt: function (item) {
		var x, y, m, n, _havespace;

		for(y = 0 ; y < 4 ; y++)
		{
			for(x = 0 ; x < 10 ; x++)
			{
				_havespace = true;

				for(m = 0 ; m < item.ysize ; m++)
				{
					for(n = 0 ; n < item.xsize ; n++)
					{
						if(_NTCU_Inventory[y+m][x+n] == 1)
						{
							_havespace = false;
							m = 4;
							break;
						}
					}
				}

				if(_havespace)
				{
					if(!Common.ItemToCursor(item))
						return false;

					for(m = 0 ; m < 80 ; m++)
					{
						if((m % 40) == 0)
							me.ClickItem(0, x, y, 0);

						Common.Delay(100);

						if(!me.itemoncursor)
							break;
					}

					if(m >= 80)
						return false;

					for(m = 0 ; m < item.ysize ; m++)
					{
						for(n = 0 ; n < item.xsize ; n++)
							_NTCU_Inventory[y+m][x+n] = 1;
					}

					Common.PingDelay(200);

					return true;
				}
			}
		}

		return false;
	},

	OpenCubeInt: function (_cube) {
		if(_cube.itemloc == 4 && !GetUIState(0x19))
		{
			var _stash = Object.FindUnit(NTC_UNIT_OBJECT, NTC_UNIT_STASH, 1);

			if(!_stash)
				return false;

			if(!Tools.DoInteract(_stash))
				return false;
		}

		if(!GetUIState(0x1A))
			return Tools.DoInteract(_cube);

		return true;
	},

	CloseCubeInt: function () {
		var i;

		if(!GetUIState(0x1A))
			return true;

		for(i = 0 ; i < 20 ; i++)
		{
			if((i % 10) == 0)
				me.Cancel(0);

			Common.Delay(200);

			if(!GetUIState(0x1A))
			{
				Common.PingDelay(200);
				return true;
			}
		}

		return false;
	},

	ClearCubeInt: function () {
		var i,
			_itemcounts = 0,
			_items = me.GetItems();

		if(!_items)
			return 0;

		for(i = 0 ; i < _items.length ; i++)
		{
			if(_items[i].mode == 0 && _items[i].itemloc == 3)
			{
				if(!this.MoveItemToInventoryInt(_items[i]))
					return _itemcounts;

				_itemcounts++;
			}
		}

		return _itemcounts;
	},

	GetCubeContents: function () {
		var _items = me.GetItems(),
			_cube_items = new Array();

		for(i = 0 ; i < _items.length ; i++)
		{
			if(_items[i].mode == 0 && _items[i].itemloc == 3)
			{
				_cube_items.push(_items[i]);
			}
		}

		return _cube_items;	
	}
};